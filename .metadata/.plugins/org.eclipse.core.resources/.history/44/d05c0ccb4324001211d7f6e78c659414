package hurdad.supermunchkin;

import java.util.ArrayList;

import android.app.Activity;
import android.app.Dialog;
import android.app.ListActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

public class OrderPlayersActivity extends ListActivity {
    ArrayList<Player> orderedPlayers;
	private Button startGameButton;
	private Button reorderPlayersButton;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_order_players);
        
        // receive the ArrayList of selected players for this game
        final ArrayList<Player> players = getIntent().getParcelableArrayListExtra("selectedPlayers");
        
        // create the originally empty ArrayList of ordered players for main listView
        orderedPlayers = new ArrayList<Player>();
        final PlayerAdapter orderedPlayerAdapter = new PlayerAdapter(this, orderedPlayers, R.layout.ordered_player_list_item);
        setListAdapter(orderedPlayerAdapter);
        
        // set listView to not select
        getListView().setChoiceMode(ListView.CHOICE_MODE_NONE);

        // build the modal dialog to select player order
        final Dialog dialog = new Dialog(this);
        dialog.setContentView(R.layout.choose_next_player);
		dialog.setTitle("Who Plays First?");
    	final ListView modalListView = (ListView) dialog.findViewById(R.id.listView);
    	
    	// obtain a copy of the original player data to select from in the modal dialog
        ArrayList<Player> rawPlayers = (ArrayList<Player>) players.clone();
        final PlayerAdapter rawPlayerAdapter = new PlayerAdapter(this, rawPlayers, R.layout.ordered_player_list_item);
    	modalListView.setAdapter(rawPlayerAdapter);
    	
    	// set click listener for the modal listVew items to be selected and added to ordered list
    	modalListView.setOnItemClickListener(new OnItemClickListener() {

			public void onItemClick(AdapterView<?> adapterView,
									View itemView,
									int position,
									long id) {

				// alter the modal title after the first selection
	        	if (orderedPlayerAdapter.getCount() == 0) {
	        		dialog.setTitle("Who Plays Next?");
	        	}
				
	        	// dismiss the modal dialog when there are no more players to order
				if (rawPlayerAdapter.getCount() == 1) {
					dialog.dismiss();
				}
	        	
				// remove the selected player list item from the modal
				Player player = rawPlayerAdapter.getItem(position);
				rawPlayerAdapter.remove(player);
				rawPlayerAdapter.notifyDataSetChanged();
				
				// add the selected player list item to the main listView
				orderedPlayerAdapter.add(player);
				orderedPlayerAdapter.notifyDataSetChanged();
				
				// update the corresponding listViews
				OrderPlayersActivity.this.getListView().invalidate();
				modalListView.invalidate();
			}
    		
    	});
    	
    	// show the inital dialog on activity start
		dialog.show();
        
		// set click handler for Start Game button to spawn game tracker activity
        startGameButton = (Button) findViewById(R.id.startGameButton);
        startGameButton.setOnClickListener(new OnClickListener() {

			public void onClick(View v) {
				Intent data = new Intent(OrderPlayersActivity.this, GameTrackerActivity.class);
				data.putExtra("callingActivity", "OrderPlayersActivity");
				data.putParcelableArrayListExtra("orderedPlayers", OrderPlayersActivity.this.getOrderedPlayers());
				setResult(Activity.RESULT_OK, data);
			}
        });
        
        // set click handler for reorderButton to start order process over
        reorderPlayersButton = (Button) findViewById(R.id.reorderPlayersButton);
        reorderPlayersButton.setOnClickListener(new OnClickListener() {

			public void onClick(View v) {
				
				// clear and redraw modal player listView
				rawPlayerAdapter.clear();
				ArrayList<Player> rawPlayers = (ArrayList<Player>) players.clone();
				rawPlayerAdapter.addAll(rawPlayers);
				rawPlayerAdapter.notifyDataSetChanged();
				dialog.findViewById(R.id.listView).invalidate();
				
				// clear and redraw main player listView
				orderedPlayerAdapter.clear();
				orderedPlayerAdapter.notifyDataSetChanged();
				OrderPlayersActivity.this.getListView().invalidate();
				
				// set to the initial dialog title and show the modal
				dialog.setTitle("Who Plays First?");
				dialog.show();
			}
        });
    }

	public ArrayList<Player> getOrderedPlayers() {
		return orderedPlayers;
	}

	public void setOrderedPlayers(ArrayList<Player> orderedPlayers) {
		this.orderedPlayers = orderedPlayers;
	}

	@Override
	protected void onPause() {
		super.onPause();
		Toast.makeText(this, "onPause()", Toast.LENGTH_SHORT).show();
	}

	@Override
	protected void onResume() {
		super.onResume();
		Toast.makeText(this, "onPause()", Toast.LENGTH_SHORT).show();
	}
}
